training
switch case:
  systemctl start|status|restart|stop|enable|disable sshd 
  yum install/remove/updates/upgrade

tomcat:
  catalina.sh | status | restart | stop | start | version
  catalina.sh start tomcat 
  catalina.sh stop  tomcat   
  catalina.sh restart  tomcat   
sonarQube:
  sonar.sh  | status | restart | stop | start | version

Command Line arguments:
  catalina.sh stop tomcat
    $0        $1     $2   

Syntax for switch case:
case $1 in  
    option1)
      Commands;;
    option2)
      Commands;;
    option3)
      Commands;;
    *)
      Commands;;
esac 
=====
switch-case.sh   
echo "switch case starts"
case $1 in   
    start)
      echo "sonarQube server starting"
      echo "sonarQube server started" ;;
    stop)
      echo "sonarQube server stopping"
      echo "sonarQube server stopped" ;; 
    restart)
      echo "sonarQube server restarting"
      echo "sonarQube server restarted" ;; 
    *)
      echo "you entered an invalid option"
      echo "Please enter start, stop or restart option" ;;
esac  
echo "switch case ends"
----
functions :
  Functions:   
 A function is a piece of code that perfoms
 a specific task and avoids repetition/duplication.

usermgt(){
  echo "Enter the username of the new user"
  read name
  sudo adduser $name
  echo $name account is created successfully
  tail -1 /etc/passwd
  grep $name /etc/passwd
}

filemgt(){
  if [ -e /etc/passwd ]
  then
   echo "File management"
   echo "The file exist. Please proceed ..."
   grep simon /etc/passwd
   touch test.java /home/simon/
  else
    echo "It doesn't exist"
  fi
}
packagemgt(){
  sudo yum update -y
  sudo yum install tree nano vim unzip -y
}
db_backup(){
  cp -r * /tmp/backup/
}
monitoring(){
  df -h
  free -m
  top
}
usermgt
filemgt

sonarQube used for Code quality analysis:
  1- Free from duplications          

lanre
japa
